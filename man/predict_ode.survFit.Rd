% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importFromMorse.R
\name{predict_ode.survFit}
\alias{predict_ode.survFit}
\title{Predict method for \code{survFit} objects}
\usage{
\method{predict_ode}{survFit}(
  object,
  data_predict = NULL,
  spaghetti = FALSE,
  mcmc_size = 1000,
  hb_value = TRUE,
  interpolate_length = 100,
  interpolate_method = "linear",
  hb_valueFORCED = NA,
  ...
)
}
\arguments{
\item{object}{An object of class \code{survFit}.}

\item{data_predict}{A dataframe with three columns \code{time}, \code{conc} and \code{replicate}
used for prediction. If \code{NULL}, prediction is based on \code{x} object of
class \code{survFit} used for fitting.}

\item{spaghetti}{If \code{TRUE}, return a set of survival curves using
parameters drawn from the posterior distribution.}

\item{mcmc_size}{Can be used to reduce the number of mcmc samples in order to speed up
the computation. \code{mcmc_size} is the number of selected iterations for one chain. Default
is 1000. If all MCMC is wanted, set argument to \code{NULL}.}

\item{hb_value}{If \code{TRUE}, the background mortality \code{hb} is taken into account from the posterior.
If \code{FALSE}, parameter \code{hb} is set to a fixed value. The default is \code{TRUE}.}

\item{interpolate_length}{Length of the time sequence for which output is wanted.}

\item{interpolate_method}{The interpolation method for concentration. See package \code{deSolve} for details.
Default is \code{linear}.}

\item{hb_valueFORCED}{If \code{hb_value} is \code{FALSE}, it fix \code{hb}.}

\item{\dots}{Further arguments to be passed to generic methods}
}
\description{
Function from the \code{morse v 3.3.1} package.
This is the generic \code{predict} S3 method for the \code{survFit} class.
It provides predicted survival rate for "SD" or "IT" models under constant or time-variable exposure.
}
\examples{

# (1) Load the survival data
data("propiconazole_pulse_exposure")

# (2) Create an object of class "survData"
dataset <- survData(propiconazole_pulse_exposure)

\dontrun{
# (3) Run the survFit function
out <- survFit(dataset , model_type = "SD")

# (4) Create a new data table for prediction
data_4prediction <- data.frame(time = 1:10,
                               conc = c(0,5,30,30,0,0,5,30,15,0),
                               replicate= rep("predict", 10))

# (5) Predict on a new data set
predict_out <- predict_ode(object = out, data_predict = data_4prediction,
                           mcmc_size = 1000, spaghetti = TRUE)

}

}
